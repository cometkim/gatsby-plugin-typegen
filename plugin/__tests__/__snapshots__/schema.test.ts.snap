// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`stable schema should not containt dev only fields/values, and derived from plugin metadata 1`] = `
"directive @childOf(mimeTypes: [String!]! = [], types: [String!]! = []) on OBJECT

directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

directive @dontInfer on OBJECT

directive @fileByRelativePath(from: String) on FIELD_DEFINITION

directive @infer on OBJECT

directive @link(by: String! = \\"id\\", from: String, on: String) on FIELD_DEFINITION

directive @mimeTypes(types: [String!]! = []) on OBJECT

directive @nodeInterface on INTERFACE

directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

input AVIFOptions {
  lossless: Boolean
  quality: Int
  speed: Int
}

input BlurredOptions {
  toFormat: ImageFormat
  width: Int
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

scalar Date

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

type Directory implements Node {
  absolutePath: String!
  accessTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  atime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  atimeMs: Float!
  base: String!
  birthTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  birthtime: Date @deprecated(reason: \\"Use \`birthTime\` instead\\")
  birthtimeMs: Float @deprecated(reason: \\"Use \`birthTime\` instead\\")
  blksize: Int
  blocks: Int
  changeTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  children: [Node!]!
  ctime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  mtime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  nodes: [Directory!]!
  pageInfo: PageInfo!
  sum(field: DirectoryFieldsEnum!): Float
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

type DirectoryGroupConnection {
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

type File implements Node {
  absolutePath: String!
  accessTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  atime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  atimeMs: Float!
  base: String!
  birthTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  birthtime: Date @deprecated(reason: \\"Use \`birthTime\` instead\\")
  birthtimeMs: Float @deprecated(reason: \\"Use \`birthTime\` instead\\")
  blksize: Int
  blocks: Int
  changeTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  childImageSharp: ImageSharp
  children: [Node!]!
  childrenImageSharp: [ImageSharp]
  ctime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  mtime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  publicURL: String
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  nodes: [File!]!
  pageInfo: PageInfo!
  sum(field: FileFieldsEnum!): Float
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  childImageSharp___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___children___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___base64 @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___srcSet @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___srcWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fixed___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___base64 @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___originalImg @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___presentationHeight @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___presentationWidth @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___sizes @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___srcSet @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___srcWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___fluid___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___gatsbyImageData @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___original___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___original___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___original___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___parent___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___resize___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___resize___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___resize___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___resize___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___resize___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childImageSharp___resize___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children
  childrenImageSharp
  childrenImageSharp___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___children___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___base64 @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___srcSet @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fixed___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___base64 @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___originalImg @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___sizes @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___srcSet @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___gatsbyImageData @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___original___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___original___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___original___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___parent___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___resize___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___resize___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___resize___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___resize___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  childrenImageSharp___resize___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  children: NodeFilterListInput
  childrenImageSharp: ImageSharpFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

type FileGroupConnection {
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum ImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(background: String = \\"rgba(0,0,0,1)\\", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0, webpQuality: Int, width: Int): ImageSharpFixed
  fluid(background: String = \\"rgba(0,0,0,1)\\", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, jpegProgressive: Boolean = true, jpegQuality: Int, maxHeight: Int, maxWidth: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, sizes: String = \\"\\", srcSetBreakpoints: [Int] = [], toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0, webpQuality: Int): ImageSharpFluid
  gatsbyImageData(aspectRatio: Float, avifOptions: AVIFOptions, backgroundColor: String, blurredOptions: BlurredOptions, breakpoints: [Int], formats: [ImageFormat], height: Int, jpgOptions: JPGOptions, layout: ImageLayout = CONSTRAINED, outputPixelDensities: [Float], placeholder: ImagePlaceholder, pngOptions: PNGOptions, quality: Int, sizes: String, tracedSVGOptions: Potrace, transformOptions: TransformOptions, webpOptions: WebPOptions, width: Int): JSON!
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(background: String = \\"rgba(0,0,0,1)\\", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  sum(field: ImageSharpFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___children___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  children___parent___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___base64 @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___srcSet @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___srcSetWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___srcWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fixed___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___base64 @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___originalImg @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___presentationHeight @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___presentationWidth @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___sizes @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___srcSet @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___srcSetWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___srcWebp @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  fluid___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  gatsbyImageData @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  original___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  original___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  original___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___children___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___children___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___children___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___internal___content @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___internal___contentDigest @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___internal___description @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___internal___fieldOwners @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___internal___ignoreType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___internal___mediaType @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___internal___owner @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___internal___type @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___parent___children @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  parent___parent___parent___id @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  resize___aspectRatio @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  resize___height @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  resize___originalName @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  resize___src @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  resize___tracedSVG @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
  resize___width @deprecated(reason: \\"Sorting on fields that need arguments to resolve is deprecated.\\")
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

type ImageSharpGroupConnection {
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input JPGOptions {
  progressive: Boolean = true
  quality: Int
}

scalar JSON @specifiedBy(url: \\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf\\")

input JSONQueryOperatorInput {
  eq: JSON
  glob: JSON
  in: [JSON]
  ne: JSON
  nin: [JSON]
  regex: JSON
}

interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input PNGOptions {
  compressionSpeed: Int = 4
  quality: Int
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

type Query {
  allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
  allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
  allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
  allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
  allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
  allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
  directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
  file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
  imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
  site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
  siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
  siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, apiRoute: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalFilePath: StringQueryOperatorInput, parent: NodeFilterInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
  sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput): SitePage
}

type Site implements Node {
  buildTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
  buildTime(difference: String, formatString: String, fromNow: Boolean, locale: String): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

type SiteBuildMetadataGroupConnection {
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  nodes: [Site!]!
  pageInfo: PageInfo!
  sum(field: SiteFieldsEnum!): Float
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  siteMetadata___author
  siteMetadata___description
  siteMetadata___title
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

type SiteFunction implements Node {
  absoluteCompiledFilePath: String!
  apiRoute: String!
  children: [Node!]!
  id: ID!
  internal: Internal!
  matchPath: String
  originalFilePath: String!
  parent: Node
  relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  edges: [SiteFunctionEdge!]!
  group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  sum(field: SiteFunctionFieldsEnum!): Float
  totalCount: Int!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

enum SiteFunctionFieldsEnum {
  absoluteCompiledFilePath
  apiRoute
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  matchPath
  originalFilePath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  relativeCompiledFilePath
}

input SiteFunctionFilterInput {
  absoluteCompiledFilePath: StringQueryOperatorInput
  apiRoute: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  matchPath: StringQueryOperatorInput
  originalFilePath: StringQueryOperatorInput
  parent: NodeFilterInput
  relativeCompiledFilePath: StringQueryOperatorInput
}

type SiteFunctionGroupConnection {
  edges: [SiteFunctionEdge!]!
  field: String!
  fieldValue: String
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteGroupConnection {
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  componentPath: String
  id: ID!
  internal: Internal!
  internalComponentName: String!
  isCreatedByStatefulCreatePages: Boolean
  matchPath: String
  parent: Node
  path: String!
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  sum(field: SitePageFieldsEnum!): Float
  totalCount: Int!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  componentPath
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  matchPath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  matchPath: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
}

type SitePageGroupConnection {
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteSiteMetadata {
  author: String
  description: String
  title: String
}

input SiteSiteMetadataFilterInput {
  author: StringQueryOperatorInput
  description: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}

input TransformOptions {
  cropFocus: ImageCropFocus = ATTENTION
  duotone: DuotoneGradient
  fit: ImageFit = COVER
  grayscale: Boolean = false
  rotate: Int = 0
  trim: Float = 0
}

input WebPOptions {
  quality: Int
}
"
`;
